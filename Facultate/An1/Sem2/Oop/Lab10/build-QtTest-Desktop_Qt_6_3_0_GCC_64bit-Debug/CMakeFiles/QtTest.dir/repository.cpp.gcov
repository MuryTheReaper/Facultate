        -:    0:Source:/home/mury/Oop/Lab10/QtTest/repository.cpp
        -:    1:#include "repository.h"
        -:    2:#include "my_vector.h"
        -:    3:#include <algorithm> // NOLINT
        -:    4:#include <vector>
        -:    5:
       96:    6:void repository::add(const disciplina &x) {
        -:    7:
       96:    8:  if (exist(x)) {
        4:    9:    throw repoException("Exista deja disciplina: " + x.get_denumire());
        -:   10:  }
       92:   11:  list.push_back(x);
       92:   12:}
        -:   13:
      120:   14:bool repository::exist(const disciplina &x) const {
        -:   15:
        -:   16:  try {
      120:   17:    find(x);
       24:   18:    return true;
       96:   19:  } catch (repoException &) {
       96:   20:    return false;
       96:   21:  }
        -:   22:}
        -:   23:
      156:   24:const disciplina &repository::find(const disciplina &x) const {
        -:   25:
      256:   26:  for (const auto &y : list) {
      160:   27:    if (x == y) {
       60:   28:      return y;
        -:   29:    }
        -:   30:  }
        -:   31:
       96:   32:  throw repoException("Nu exista disciplina: " + x.get_denumire());
        -:   33:}
        -:   34:
       92:   35:const std::vector<disciplina> &repository::get_all() const noexcept {
        -:   36:
       92:   37:  return list;
        -:   38:}
        -:   39:
       12:   40:std::ostream &operator<<(std::ostream &out, const repoException &ex) {
        -:   41:
       12:   42:  out << ex.msg;
       12:   43:  return out;
        -:   44:}
        -:   45:
       24:   46:void repository::remove(const disciplina &x) {
        -:   47:
       24:   48:  if (!exist(x)) {
        4:   49:    throw repoException("Nu exista disciplina: " + x.get_denumire());
        -:   50:  }
       20:   51:  list.erase(std::remove(list.begin(), list.end(), x));
        -:   52:  // list.remove(x);
       20:   53:}
        -:   54:
       16:   55:void repository::modify(const disciplina &x) {
        -:   56:
       16:   57:  bool ok = false;
       20:   58:  for (auto &y : list) {
       16:   59:    if (x == y) {
       12:   60:      y.set_ore(x.get_ore());
       12:   61:      y.set_tip(x.get_tip());
       12:   62:      y.set_profesor(x.get_profesor());
       12:   63:      ok = true;
       12:   64:      break;
        -:   65:    }
        -:   66:  }
       16:   67:  if (!ok) {
        4:   68:    throw repoException("Nu exista disciplina: " + x.get_denumire());
        -:   69:  }
       12:   70:}
